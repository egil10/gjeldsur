name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    # Run monthly on the 1st at 6:00 UTC
    - cron: '0 6 1 * *'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Node.js dependencies
      working-directory: web
      run: npm ci
      
    - name: Run data pipeline
      run: |
        python pipelines/run_all.py --seed
        python scripts/verify_data.py --verbose
        
    - name: Build React app
      working-directory: web
      run: npm run build
      
    - name: Create site directory
      run: |
        mkdir -p site
        cp -r web/dist/* site/
        cp -r data site/
        cp -r config site/
        cp -r plots site/ 2>/dev/null || true
        
    - name: Upload site artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: site
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      if: github.ref == 'refs/heads/main'
      
    - name: Comment deployment status
      if: github.event_name == 'workflow_dispatch'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: deployments } = await github.rest.repos.listDeployments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            environment: 'github-pages',
            per_page: 1
          });
          
          if (deployments.length > 0) {
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployments[0].id,
              state: 'success',
              environment_url: 'https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/'
            });
          }
